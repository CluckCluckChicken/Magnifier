@page "/react"
@page "/react/{commentId}/{name}"
@using Magnifier.Models
@using Services
@inject AuthenticationService AuthenticationService
@inject Blazored.LocalStorage.ISyncLocalStorageService LocalStorage
@inject HttpClient Http
@inject IJSRuntime JsRuntime;

@if (hasInitialized)
{
    <Heading size="3">Do you want to toggle reaction @reaction.emoji to the following comment?</Heading>
    <Button onClick="@Yes">Yes</Button>
    <Button>No</Button>
}

@code {
    private bool hasInitialized = false;

    [Parameter]
    public string commentId { get; set; }

    [Parameter]
    public string name { get; set; }

    public Reaction reaction { get; set; }

    protected override async Task OnInitializedAsync()
    {
        reaction = await Http.GetFromJsonAsync<Reaction>($"https://magnifier-api.potatophant.net/api/Reactions/{name}");

        hasInitialized = true;
    }

    private async Task Yes()
    {
        HttpRequestMessage request = new HttpRequestMessage(HttpMethod.Put, $"https://magnifier-api.potatophant.net/api/Comments/{commentId}/reactions?reaction={name}");
        request.Headers.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", LocalStorage.GetItem<string>("token"));
        await Http.SendAsync(request);

        await JsRuntime.InvokeVoidAsync("close");
    }
}