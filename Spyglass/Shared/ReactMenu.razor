@using Magnifier.Models
@using Services
@inject HttpClient Http
@inject NavigationManager NavigationManager
@inject ReactionService ReactionService

<div class="flex flex-row">
    @if (hasInitialised)
    {
        if (notFound)
        {
            <p>Comment doesn't exist!</p>
        }
        else
        {
            foreach (Reaction reaction in reactions)
            {
                <ReactionButton commentId="@commentId" reactions="@commentReactions" reaction="@reaction" />
            }
        }
    }
</div>

@code {
    private bool hasInitialised = false;

    [Parameter]
    public string projectId { get; set; }

    [Parameter]
    public string commentId { get; set; }

    [Parameter]
    public Magnifier.Models.Comment comment { get; set; }

    [Parameter]
    public List<Magnifier.Models.UserReaction> commentReactions { get; set; }

    private List<Reaction> reactions { get; set; }

    private bool notFound = false;

    protected override async Task OnInitializedAsync()
    {
        await ReactionService.Initialize();

        reactions = ReactionService.reactions;
        /*
        HttpResponseMessage comment = await Http.GetAsync($"https://api.magnifier.potatophant.net/api/Comments/{commentId}");

        if (comment.StatusCode == System.Net.HttpStatusCode.NotFound)
        {
            notFound = true;
        }*/

        hasInitialised = true;
    }
}
